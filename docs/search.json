[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to My Analytics Lab",
    "section": "",
    "text": "Hello!! My name is Mert Yildiz.\nThis is my personal webpage. I have created this one for a course (EMU 660), I hope it will be useful for my future career also.\nPlease stay tuned to follow my works on data analytics, blog posts, and more.\n\n\n\n Back to top"
  },
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "It’s Not Rocket Science, It’s Electricity Market",
    "section": "",
    "text": "Electricity has increasingly become a tradable commodity on global and Turkish stock exchanges, subject to specific regulations and limitations. In a liberalized market, it is uniquely characterized by a third dimension—time—alongside price and volume. In Turkey, electricity trading takes place across multiple market platforms, all overseen and regulated by the Energy Exchange Istanbul (EXIST). This project aims to analyze the formation of electricity prices and investigate the impact of total electricity demand as well as electricity generation from various sources on price formation. Specifically, the daily impact of renewable energy generation on electricity prices will be examined, while the influence of natural gas prices on the monthly average electricity price will also be explored. Electricity prices will be forecasted using multiple linear regression models at both daily and monthly resolutions, and the results will be evaluated accordingly."
  },
  {
    "objectID": "project.html#data-source",
    "href": "project.html#data-source",
    "title": "It’s Not Rocket Science, It’s Electricity Market",
    "section": "2.1 Data Source",
    "text": "2.1 Data Source\nThis project will utilize three main data sources related to the electricity market or influence it. EPİAŞ (Energy Exchange Istanbul), TEİAŞ (Turkish Electricity Transmission Corporation), and BOTAŞ (Petroleum Pipeline Corporation) are public institutions in Turkey that act as decision-makers and regulators in the electricity market. The open-access data provided by these institutions will be used throughout the analysis and forecasting processes of the project. Data sources can be reached by clicking links below.\nEPİAŞ\nTEİAŞ\nBOTAŞ"
  },
  {
    "objectID": "project.html#general-information-about-data",
    "href": "project.html#general-information-about-data",
    "title": "It’s Not Rocket Science, It’s Electricity Market",
    "section": "2.2 General Information About Data",
    "text": "2.2 General Information About Data\nData related to the Day-Ahead Market will be obtained from EPİAŞ. The data sourced from EPİAŞ can be categorized under three main headings.\n\nFDDP (Final Daily Production Program): This data is provided at an hourly resolution for 12 different types of energy sources. It includes the planned generation amounts for the following day submitted by power plants operating under each source category. Every day, power plants enter their generation schedules into the system by 4 PM, and EPİAŞ collects and publishes this data aggregated by source type.\nReal-Time Consumption: This data represents the total amount of electricity consumed across Turkey. It is provided on an hourly basis and can be referred to as the total electricity demand.\nMCP (Market Clearing Price): This data refers to the electricity price determined for each hour in the Day-Ahead Market, formed by matching supply and demand for the traded electricity.\n\nNatural gas tariff data has been sourced from BOTAŞ. The prices of natural gas used for electricity generation are determined by BOTAŞ. Additionally, water inflow data to the main basin dams, provided by TEİAŞ, may be used if deemed necessary."
  },
  {
    "objectID": "project.html#reason-of-choice",
    "href": "project.html#reason-of-choice",
    "title": "It’s Not Rocket Science, It’s Electricity Market",
    "section": "2.3 Reason of Choice",
    "text": "2.3 Reason of Choice\nThe electricity market consists of various sub-markets. Making accurate price forecasts for short-term and long-term electricity sales can create significant added value. Especially in long-term purchase or sale agreements, forecasting electricity prices can facilitate more profitable commercial deals while minimizing risk. For instance, the analyses and models developed in this project can help establish a relationship between renewable energy generation and electricity prices over specific periods. These forecasts can then be used to assess buy and sell offers in the market for future periods, enabling more informed and strategic positioning."
  },
  {
    "objectID": "project.html#preprocessing",
    "href": "project.html#preprocessing",
    "title": "It’s Not Rocket Science, It’s Electricity Market",
    "section": "2.4 Preprocessing",
    "text": "2.4 Preprocessing\nIn the preprocessing stage, the data stored in Excel files was converted into RData format.\n\n\nShow Code\nlibrary(readxl)\n\nepias_data &lt;- read_excel(\"epias_data.xlsx\")\n\nbotas_data &lt;- read_excel(\"botas_data.xlsx\")\n\nsave(epias_data, botas_data, file = \"electricity.RData\")\n\nhead(epias_data)\n\n\n# A tibble: 6 × 18\n  date                hour   total naturalgas  wind lignite darkcoal\n  &lt;dttm&gt;              &lt;chr&gt;  &lt;dbl&gt;      &lt;dbl&gt; &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;\n1 2023-01-01 00:00:00 00:00 25945.      3636.  988.   4646.      136\n2 2023-01-01 01:00:00 01:00 24494.      2939. 1056.   4646.      136\n3 2023-01-01 02:00:00 02:00 22631.      2495. 1123.   4694.      136\n4 2023-01-01 03:00:00 03:00 22022.      2667. 1227.   4878.      136\n5 2023-01-01 04:00:00 04:00 21404.      2334. 1308.   4910.      136\n6 2023-01-01 05:00:00 05:00 21586.      2177. 1406.   5016.      136\n# ℹ 11 more variables: importedcoal &lt;dbl&gt;, fueloil &lt;dbl&gt;, geothermal &lt;dbl&gt;,\n#   dam &lt;dbl&gt;, naphta &lt;dbl&gt;, biomass &lt;dbl&gt;, runofriver &lt;dbl&gt;, other &lt;dbl&gt;,\n#   demand &lt;dbl&gt;, solar &lt;dbl&gt;, price &lt;dbl&gt;\n\n\nShow Code\nhead(botas_data)\n\n\n# A tibble: 6 × 3\n   year month natgasprice\n  &lt;dbl&gt; &lt;dbl&gt;       &lt;dbl&gt;\n1  2023     1       18000\n2  2023     2       15000\n3  2023     3       12000\n4  2023     4       10000\n5  2023     5       10000\n6  2023     6       10000\n\n\nThe natural gas price data obtained from BOTAŞ was available on a monthly basis. These monthly values were integrated into the hourly dataset.\n\n\nShow Code\nload(\"electricity.RData\")\nlibrary(dplyr)\n\nepias_data$date &lt;- as.Date(epias_data$date)\n\nepias_data$year &lt;- format(epias_data$date, \"%Y\")\nepias_data$month &lt;- format(epias_data$date, \"%m\")\n\nbotas_data$month &lt;- sprintf(\"%02d\", botas_data$month)\n\nbotas_data$year &lt;- as.character(botas_data$year)\n\nepias_merged &lt;- left_join(epias_data, botas_data, by = c(\"year\", \"month\"))\n\nsave(epias_merged, file = \"electricity_merged.RData\")\n\nepias_merged &lt;- epias_merged %&gt;%\n  select(date, year, month, everything(), -year, -month)\n\nepias_merged &lt;- epias_merged %&gt;%\n  select(-price, everything(), price)\n\nsave(epias_merged, file = \"electricity_merged.RData\")\n\n\nThe hourly data was converted into daily averages to enable analysis at a daily resolution.\n\n\nShow Code\nlibrary(dplyr)\n\nepias_daily &lt;- epias_merged %&gt;%\n  group_by(date) %&gt;%\n  summarise(across(where(is.numeric), mean, na.rm = TRUE))\n\n\nFinally, a feature aggregation process was carried out to prepare the data for forecasting. Generation sources with similar characteristics were grouped under common categories. Fueloil, naphta, lignite, and hard coal were combined under the label cheap_thermal. Wind, run-of-river, biomass, and geothermal sources were grouped under renewables.\nSolar and hydro (dam) generation were excluded from the renewables group, as they exhibit distinct production characteristics. The category other was disregarded due to its low share and lack of detailed classification.\n\n\nShow Code\nlibrary(dplyr)\n\nepias_simplified_daily &lt;- epias_daily %&gt;%\n  mutate(\n    cheap_thermal = fueloil + naphta + lignite + darkcoal,\n    renewables = wind + runofriver + biomass + geothermal\n  ) %&gt;%\n  select(\n    date, cheap_thermal, renewables,\n    importedcoal, naturalgas, solar, dam, demand, natgasprice, price\n  )\nsave(epias_simplified_daily, file = \"epias_simplified_daily.RData\")"
  },
  {
    "objectID": "project.html#exploratory-data-analysis",
    "href": "project.html#exploratory-data-analysis",
    "title": "It’s Not Rocket Science, It’s Electricity Market",
    "section": "3.1 Exploratory Data Analysis",
    "text": "3.1 Exploratory Data Analysis\nxxxxxx"
  },
  {
    "objectID": "project.html#trend-analysis",
    "href": "project.html#trend-analysis",
    "title": "It’s Not Rocket Science, It’s Electricity Market",
    "section": "3.2 Trend Analysis",
    "text": "3.2 Trend Analysis\nxxxxxx"
  },
  {
    "objectID": "project.html#model-fitting",
    "href": "project.html#model-fitting",
    "title": "It’s Not Rocket Science, It’s Electricity Market",
    "section": "3.3 Model Fitting",
    "text": "3.3 Model Fitting\nDaily average electricity prices were forecasted using a multiple linear regression approach.\nTwo different models were developed. Although both models followed the same computational logic, they differed in feature selection and feature aggregation strategies. In the first model, all available variables were used individually as features, whereas in the second model, a feature aggregation approach was applied.\n\n3.3.1 What Happens If We Don’t Aggregate Features?\n\n\nShow Code\nlibrary(dplyr)\nlibrary(car)\nlibrary(ggplot2)\n\nreg_data1 &lt;- epias_daily %&gt;%\n  select(price, naturalgas, wind, lignite, darkcoal, importedcoal, fueloil, geothermal, dam, naphta, biomass, runofriver, other, demand, solar, natgasprice) %&gt;%\n  na.omit()\n\nmodel1 &lt;- lm(price ~ naturalgas + wind + lignite + darkcoal + importedcoal + fueloil + geothermal + dam + naphta + biomass + runofriver + other + demand + solar + natgasprice, data = reg_data1)\n\nsummary(model1)\n\n\n\nCall:\nlm(formula = price ~ naturalgas + wind + lignite + darkcoal + \n    importedcoal + fueloil + geothermal + dam + naphta + biomass + \n    runofriver + other + demand + solar + natgasprice, data = reg_data1)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-913.47  -89.95   -1.53  101.26  501.77 \n\nCoefficients:\n               Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  -1.982e+03  2.039e+02  -9.725  &lt; 2e-16 ***\nnaturalgas    4.853e-02  1.083e-02   4.481 8.63e-06 ***\nwind         -4.299e-02  1.021e-02  -4.212 2.85e-05 ***\nlignite       1.250e-02  2.292e-02   0.545  0.58566    \ndarkcoal      1.293e-01  9.810e-02   1.318  0.18779    \nimportedcoal  7.100e-02  1.422e-02   4.993 7.47e-07 ***\nfueloil       2.881e+00  1.219e+00   2.364  0.01834 *  \ngeothermal    2.114e-01  1.384e-01   1.528  0.12707    \ndam          -5.017e-02  1.136e-02  -4.415 1.16e-05 ***\nnaphta       -4.473e+01  6.276e+01  -0.713  0.47623    \nbiomass       8.360e-04  1.765e-01   0.005  0.99622    \nrunofriver    1.168e-01  1.824e-02   6.404 2.74e-10 ***\nother        -4.118e-02  8.859e-02  -0.465  0.64217    \ndemand        3.037e-02  9.991e-03   3.040  0.00245 ** \nsolar         2.519e-02  1.683e-02   1.496  0.13501    \nnatgasprice   1.701e-01  6.133e-03  27.736  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 168.9 on 715 degrees of freedom\nMultiple R-squared:  0.8836,    Adjusted R-squared:  0.8812 \nF-statistic: 361.9 on 15 and 715 DF,  p-value: &lt; 2.2e-16\n\n\nShow Code\nvif(model1)\n\n\n  naturalgas         wind      lignite     darkcoal importedcoal      fueloil \n   36.019212    11.420398     3.354866     1.503104    13.072816     1.279864 \n  geothermal          dam       naphta      biomass   runofriver        other \n    5.939204    10.702876     1.057892     2.303100    11.131208     4.756550 \n      demand        solar  natgasprice \n   51.610155     8.003321     2.753763 \n\n\nShow Code\npar(mfrow = c(2, 2))\nplot(model1)\n\n\n\n\n\n\n\n\n\nShow Code\npar(mfrow = c(1, 1))\n\n\nreg_data1$predicted_price1 &lt;- predict(model1)\n\nggplot(reg_data1, aes(x = predicted_price1, y = price)) +\n  geom_point(color = \"steelblue\") +\n  geom_abline(slope = 1, intercept = 0, color = \"darkred\", linetype = \"dashed\") +\n  labs(\n    title = \"Actual vs Predicted Electricity Price\",\n    x = \"Predicted Price\",\n    y = \"Actual Price\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\n3.3.2 What If We Aggregate Features?\n\n\nShow Code\nlibrary(dplyr)\nlibrary(car)\nlibrary(ggplot2)\n\nreg_data &lt;- epias_simplified_daily %&gt;%\n  select(price, cheap_thermal, naturalgas, importedcoal, renewables, demand, solar, dam, natgasprice) %&gt;%\n  na.omit()\n\n\nmodel &lt;- lm(price ~ cheap_thermal + naturalgas + importedcoal + renewables + demand + solar + dam + natgasprice, data = reg_data)\n\nsummary(model)\n\n\n\nCall:\nlm(formula = price ~ cheap_thermal + naturalgas + importedcoal + \n    renewables + demand + solar + dam + natgasprice, data = reg_data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1078.97   -97.87     7.74   114.92   587.23 \n\nCoefficients:\n                Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   -6.994e+02  1.027e+02  -6.812 2.03e-11 ***\ncheap_thermal  5.054e-03  2.295e-02   0.220 0.825754    \nnaturalgas     1.977e-02  1.026e-02   1.926 0.054483 .  \nimportedcoal  -3.961e-02  1.080e-02  -3.666 0.000264 ***\nrenewables    -7.091e-02  9.712e-03  -7.302 7.52e-13 ***\ndemand         5.646e-02  8.919e-03   6.330 4.29e-10 ***\nsolar         -4.154e-02  1.038e-02  -4.003 6.91e-05 ***\ndam           -4.511e-02  1.023e-02  -4.412 1.18e-05 ***\nnatgasprice    1.544e-01  4.778e-03  32.311  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 191.1 on 722 degrees of freedom\nMultiple R-squared:  0.8494,    Adjusted R-squared:  0.8477 \nF-statistic: 509.1 on 8 and 722 DF,  p-value: &lt; 2.2e-16\n\n\nShow Code\nvif(model)\n\n\ncheap_thermal    naturalgas  importedcoal    renewables        demand \n     2.984234     25.250485      5.887888      9.567100     32.098596 \n        solar           dam   natgasprice \n     2.374800      6.767137      1.304383 \n\n\nShow Code\npar(mfrow = c(2, 2))\nplot(model)\n\n\n\n\n\n\n\n\n\nShow Code\npar(mfrow = c(1, 1))\n\n\nreg_data$predicted_price &lt;- predict(model)\n\nggplot(reg_data, aes(x = predicted_price, y = price)) +\n  geom_point(color = \"steelblue\") +\n  geom_abline(slope = 1, intercept = 0, color = \"darkred\", linetype = \"dashed\") +\n  labs(\n    title = \"Actual vs Predicted Electricity Price\",\n    x = \"Predicted Price\",\n    y = \"Actual Price\"\n  ) +\n  theme_minimal()"
  },
  {
    "objectID": "project.html#results",
    "href": "project.html#results",
    "title": "It’s Not Rocket Science, It’s Electricity Market",
    "section": "3.4 Results",
    "text": "3.4 Results\nWhen both models are evaluated, the model without feature aggregation shows a higher R-squared value and a lower standard error, indicating better predictive performance. However, an inspection of the feature coefficients reveals that the first model includes more features with statistically insignificant coefficients. Furthermore, the near-zero effect of solar generation in this model raises questions about its reliability.\nAlthough the second model exhibits a slightly higher error rate, it offers a clearer explanation of how each feature impacts the electricity price and stands out for its simpler structure. Despite this, both models appear to produce somewhat biased predictions for extreme price values (very high or very low), likely due to the influence of outliers.\nThe chart below presents the actual and predicted electricity prices for November and June 2024. While both models demonstrate a strong ability to track the general trend, Model 2 shows a greater tendency toward producing outlier or extreme values.\n\n\nShow Code\ndata1 &lt;- epias_daily %&gt;%\n  select(date, price, naturalgas, wind, lignite, darkcoal, importedcoal, fueloil, geothermal, dam, naphta, biomass, runofriver, other, demand, solar, natgasprice) %&gt;%\n  na.omit() %&gt;%\n  mutate(predicted_price1 = predict(model1, newdata = .))\n\ndata2 &lt;- epias_simplified_daily %&gt;%\n  select(date, price, cheap_thermal, naturalgas, importedcoal, renewables, demand, solar, dam, natgasprice) %&gt;%\n  na.omit() %&gt;%\n  mutate(predicted_price2 = predict(model, newdata = .))\n\n\ncombined &lt;- data1 %&gt;%\n  inner_join(data2 %&gt;% select(date, predicted_price2), by = \"date\") %&gt;%\n  filter(date &gt;= as.Date(\"2024-01-01\") & date &lt;= as.Date(\"2024-01-31\"))\n\n\nlibrary(tidyr)\nplot_data &lt;- combined %&gt;%\n  select(date, price, predicted_price1, predicted_price2) %&gt;%\n  pivot_longer(cols = c(price, predicted_price1, predicted_price2),\n               names_to = \"type\", values_to = \"value\")\n\n\nggplot(plot_data, aes(x = date, y = value, color = type)) +\n  geom_line(size = 1.2) +\n  scale_color_manual(\n    values = c(\"price\" = \"black\", \"predicted_price1\" = \"steelblue\", \"predicted_price2\" = \"orange\"),\n    labels = c(\"Actual Price\", \"Model 1 Prediction\", \"Model 2 Prediction\")\n  ) +\n  labs(\n    title = \"Electricity Price Forecast Actual vs Model 1 & 2\",\n    x = \"Date\",\n    y = \"Price (TL/MWh)\",\n    color = \"Legend\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5, face = \"bold\"))\n\n\n\n\n\n\n\n\n\n\n\nShow Code\ndata1 &lt;- epias_daily %&gt;%\n  select(date, price, naturalgas, wind, lignite, darkcoal, importedcoal, fueloil, geothermal, dam, naphta, biomass, runofriver, other, demand, solar, natgasprice) %&gt;%\n  na.omit() %&gt;%\n  mutate(predicted_price1 = predict(model1, newdata = .))\n\ndata2 &lt;- epias_simplified_daily %&gt;%\n  select(date, price, cheap_thermal, naturalgas, importedcoal, renewables, demand, solar, dam, natgasprice) %&gt;%\n  na.omit() %&gt;%\n  mutate(predicted_price2 = predict(model, newdata = .))\n\n\ncombined &lt;- data1 %&gt;%\n  inner_join(data2 %&gt;% select(date, predicted_price2), by = \"date\") %&gt;%\n  filter(date &gt;= as.Date(\"2024-06-01\") & date &lt;= as.Date(\"2024-06-30\"))\n\n\nlibrary(tidyr)\nplot_data &lt;- combined %&gt;%\n  select(date, price, predicted_price1, predicted_price2) %&gt;%\n  pivot_longer(cols = c(price, predicted_price1, predicted_price2),\n               names_to = \"type\", values_to = \"value\")\n\n\nggplot(plot_data, aes(x = date, y = value, color = type)) +\n  geom_line(size = 1.2) +\n  scale_color_manual(\n    values = c(\"price\" = \"black\", \"predicted_price1\" = \"steelblue\", \"predicted_price2\" = \"orange\"),\n    labels = c(\"Actual Price\", \"Model 1 Prediction\", \"Model 2 Prediction\")\n  ) +\n  labs(\n    title = \"Electricity Price Forecast Actual vs Model 1 & 2\",\n    x = \"Date\",\n    y = \"Price (TL/MWh)\",\n    color = \"Legend\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5, face = \"bold\"))\n\n\n\n\n\n\n\n\n\n\n\nShow Code\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(knitr)\nlibrary(kableExtra)\n\nmape &lt;- function(actual, predicted) {\n  mean(abs((actual - predicted) / actual), na.rm = TRUE) * 100\n}\n\ncombined_data &lt;- epias_daily %&gt;%\n  select(date, price,\n         naturalgas, wind, lignite, darkcoal, importedcoal, fueloil,\n         geothermal, dam, naphta, biomass, runofriver, other, demand, solar, natgasprice) %&gt;%\n  na.omit() %&gt;%\n  mutate(pred_model1 = predict(model1, newdata = .)) %&gt;%\n  inner_join(\n    epias_simplified_daily %&gt;%\n      select(date,\n             cheap_thermal, naturalgas, importedcoal, renewables, demand, solar, dam, natgasprice) %&gt;%\n      na.omit() %&gt;%\n      mutate(pred_model2 = predict(model, newdata = .)),\n    by = \"date\"\n  )\n\nmape_summary &lt;- combined_data %&gt;%\n  mutate(month = floor_date(date, \"month\")) %&gt;%\n  group_by(month) %&gt;%\n  summarise(\n    MAPE_Model1 = mape(price, pred_model1),\n    MAPE_Model2 = mape(price, pred_model2)\n  )\n\nmape_summary_final &lt;- bind_rows(\n  mape_summary,\n  summarise(mape_summary,\n            month = as.Date(\"9999-12-31\"),\n            MAPE_Model1 = mean(MAPE_Model1),\n            MAPE_Model2 = mean(MAPE_Model2))\n)\n\nmape_summary_final &lt;- mape_summary_final %&gt;%\n  mutate(month = if_else(month == as.Date(\"9999-12-31\"), \"Average\", format(month, \"%Y-%m\")))\n\nkable(mape_summary_final, digits = 2, caption = \"Monthly MAPE Comparison of Model 1 and Model 2\") %&gt;%\n  kable_styling(full_width = FALSE, position = \"center\") %&gt;%\n  row_spec(nrow(mape_summary_final), bold = TRUE, background = \"#f2f2f2\", \n           extra_css = \"border-top: 2px solid #999;\")\n\n\n\nMonthly MAPE Comparison of Model 1 and Model 2\n\n\nmonth\nMAPE_Model1\nMAPE_Model2\n\n\n\n\n2023-01\n3.11\n2.71\n\n\n2023-02\n6.06\n6.66\n\n\n2023-03\n7.05\n5.51\n\n\n2023-04\n17.37\n21.19\n\n\n2023-05\n9.31\n11.19\n\n\n2023-06\n9.52\n11.38\n\n\n2023-07\n6.01\n7.88\n\n\n2023-08\n4.85\n6.78\n\n\n2023-09\n4.64\n4.53\n\n\n2023-10\n4.29\n3.17\n\n\n2023-11\n6.27\n7.84\n\n\n2023-12\n3.98\n6.02\n\n\n2024-01\n6.74\n9.20\n\n\n2024-02\n8.44\n9.70\n\n\n2024-03\n5.82\n5.49\n\n\n2024-04\n17.65\n22.54\n\n\n2024-05\n8.61\n9.92\n\n\n2024-06\n8.79\n10.63\n\n\n2024-07\n3.29\n3.51\n\n\n2024-08\n3.06\n3.86\n\n\n2024-09\n3.89\n3.94\n\n\n2024-10\n6.23\n7.30\n\n\n2024-11\n4.62\n4.58\n\n\n2024-12\n5.41\n4.08\n\n\nAverage\n6.88\n7.90\n\n\n\n\n\n\n\nMAPE, the most widely used performance metric in electricity price forecasting, reveals an approximate 1% difference in error between the two models. The model without feature aggregation outperforms the aggregated one, achieving the lowest error rate at 6.88%.\nIn both of models, Natural Gas Price is the key indicator of prediction."
  },
  {
    "objectID": "assignments.html",
    "href": "assignments.html",
    "title": "My Assignments",
    "section": "",
    "text": "On this page, I showcase the assignment I conducted for the [term and year, e.g. Spring 2024-2025] EMU660 Decision Making with Analytics course.\nPlease use left menu to navigate through my assignments.\n\n\n\n Back to top",
    "crumbs": [
      "My Assignments"
    ]
  },
  {
    "objectID": "about.html#employements",
    "href": "about.html#employements",
    "title": "About Me",
    "section": "Employements",
    "text": "Employements\n\nGAMA Energy, Energy Market Modelling Analyst, 2023 - Ongoing"
  },
  {
    "objectID": "about.html#internships",
    "href": "about.html#internships",
    "title": "About Me",
    "section": "Internships",
    "text": "Internships\n\nGAMA Energy, Modelling Intern, 2023 May - September\nHAVELSAN, H&R Intern, 2022 September - December\nPresidency of the Republic of Türkiye, Business Analyst Intern, 2022 February - August\nNurol Tech., R&D Intern, 2021 May - September"
  },
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "My Blog",
    "section": "",
    "text": "There is no lemon so sour that you can’t make something resembling lemonade.\n\n\n\n Back to top"
  },
  {
    "objectID": "docs/assignments/assignment-1.html",
    "href": "docs/assignments/assignment-1.html",
    "title": "Assignment 1",
    "section": "",
    "text": "1 + 1\n\n[1] 2\n\n\nMy first assignment has two parts."
  },
  {
    "objectID": "assignments/assignment-1.html",
    "href": "assignments/assignment-1.html",
    "title": "Assignment 1",
    "section": "",
    "text": "Ps. All the codes below has written with the combined power of AI & HI. If you want to reach promts of codes that is used while preparing assignment, you can access the pdf document. 📄 Download Prompts\nMy first assignment has three parts.",
    "crumbs": [
      "Assignment 1"
    ]
  },
  {
    "objectID": "assignments/assignment-2.html",
    "href": "assignments/assignment-2.html",
    "title": "Assignment 2",
    "section": "",
    "text": "Assignment 2\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n\n Back to top",
    "crumbs": [
      "Assignment 2"
    ]
  },
  {
    "objectID": "assignments/assignment-1.html#a",
    "href": "assignments/assignment-1.html#a",
    "title": "Assignment 1",
    "section": "(a)",
    "text": "(a)\nI summarized the lesson video in which Mustafa Baydoğan was the guest.\nknitr::asis_output('&lt;iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/1Mvkn71dhaA?si=t_wcZSM6ZRUQL9In\" frameborder=\"0\" allowfullscreen&gt;&lt;/iframe&gt;')\n\nMustafa Baydoğan (associate professor of Industrial Engineering at BOUN) explained the basic steps of data processing and analysis starting from a project he did during his PhD. The problem was defined as the deformation of timber after the drying process. Timbers with a tendency to deformation were analyzed with image processing method to determine. The importance of feature determination and the differences between traditional learning and deep learning were mentioned through this example. Then, the importance of production and consumption balance in the electricity market was explained. The high cost of imbalance and the damage caused by this were explained with mathematical values. The importance of the accuracy of demand estimates made for retail electricity companies was explained. Then, the subject of product recommendation of e-commerce sites was mentioned. It was explained that the most important factor here is digital footprint data and that the estimates produced based on this data are used to attract customer attention. It was discussed how Google trends data indicates internet sales in advance. The methods of determining various movements of product recommendation estimates determined by machine learning methods based on human behavior were explained. The importance of open data sources in estimation methods and the fact that human guidance and interpretation are still very important were mentioned. As new methods, the development and importance of point estimators and physics-based estimation methods that will bring a new dimension to estimations made solely on error minimization were mentioned. New developments on the use of machine learning methods in optimization were mentioned. In summary, estimation models and their impact and benefits on various sectors were mentioned throughout the course. In all sectors from woodworking to electricity market, from logistics systems to e-commerce; the importance of the financial success that data analysis brings to the sector was mentioned, as it facilitates process interpretation. In addition, the future points that data analysis processes, which are still developing, will reach with innovations were explained.",
    "crumbs": [
      "Assignment 1"
    ]
  },
  {
    "objectID": "assignments/assignment-1.html#b.1",
    "href": "assignments/assignment-1.html#b.1",
    "title": "Assignment 1",
    "section": "(b.1)",
    "text": "(b.1)\n\ncompute_stats &lt;- function(data) {\n  results &lt;- list()\n  \n  for (col_name in colnames(data)) {\n    column_values &lt;- data[[col_name]]\n    \n    stats &lt;- list(\n      mean = mean(column_values, na.rm = TRUE),\n      median = median(column_values, na.rm = TRUE),\n      variance = var(column_values, na.rm = TRUE),\n      IQR = IQR(column_values, na.rm = TRUE),\n      min = min(column_values, na.rm = TRUE),\n      max = max(column_values, na.rm = TRUE)\n    )\n    \n    results[[col_name]] &lt;- stats\n  }\n  \n  return(results)\n}\n\ndata(mtcars)\n\nstats_results &lt;- compute_stats(mtcars)\n\nprint(stats_results)\n\n$mpg\n$mpg$mean\n[1] 20.09062\n\n$mpg$median\n[1] 19.2\n\n$mpg$variance\n[1] 36.3241\n\n$mpg$IQR\n[1] 7.375\n\n$mpg$min\n[1] 10.4\n\n$mpg$max\n[1] 33.9\n\n\n$cyl\n$cyl$mean\n[1] 6.1875\n\n$cyl$median\n[1] 6\n\n$cyl$variance\n[1] 3.189516\n\n$cyl$IQR\n[1] 4\n\n$cyl$min\n[1] 4\n\n$cyl$max\n[1] 8\n\n\n$disp\n$disp$mean\n[1] 230.7219\n\n$disp$median\n[1] 196.3\n\n$disp$variance\n[1] 15360.8\n\n$disp$IQR\n[1] 205.175\n\n$disp$min\n[1] 71.1\n\n$disp$max\n[1] 472\n\n\n$hp\n$hp$mean\n[1] 146.6875\n\n$hp$median\n[1] 123\n\n$hp$variance\n[1] 4700.867\n\n$hp$IQR\n[1] 83.5\n\n$hp$min\n[1] 52\n\n$hp$max\n[1] 335\n\n\n$drat\n$drat$mean\n[1] 3.596563\n\n$drat$median\n[1] 3.695\n\n$drat$variance\n[1] 0.2858814\n\n$drat$IQR\n[1] 0.84\n\n$drat$min\n[1] 2.76\n\n$drat$max\n[1] 4.93\n\n\n$wt\n$wt$mean\n[1] 3.21725\n\n$wt$median\n[1] 3.325\n\n$wt$variance\n[1] 0.957379\n\n$wt$IQR\n[1] 1.02875\n\n$wt$min\n[1] 1.513\n\n$wt$max\n[1] 5.424\n\n\n$qsec\n$qsec$mean\n[1] 17.84875\n\n$qsec$median\n[1] 17.71\n\n$qsec$variance\n[1] 3.193166\n\n$qsec$IQR\n[1] 2.0075\n\n$qsec$min\n[1] 14.5\n\n$qsec$max\n[1] 22.9\n\n\n$vs\n$vs$mean\n[1] 0.4375\n\n$vs$median\n[1] 0\n\n$vs$variance\n[1] 0.2540323\n\n$vs$IQR\n[1] 1\n\n$vs$min\n[1] 0\n\n$vs$max\n[1] 1\n\n\n$am\n$am$mean\n[1] 0.40625\n\n$am$median\n[1] 0\n\n$am$variance\n[1] 0.2489919\n\n$am$IQR\n[1] 1\n\n$am$min\n[1] 0\n\n$am$max\n[1] 1\n\n\n$gear\n$gear$mean\n[1] 3.6875\n\n$gear$median\n[1] 4\n\n$gear$variance\n[1] 0.5443548\n\n$gear$IQR\n[1] 1\n\n$gear$min\n[1] 3\n\n$gear$max\n[1] 5\n\n\n$carb\n$carb$mean\n[1] 2.8125\n\n$carb$median\n[1] 2\n\n$carb$variance\n[1] 2.608871\n\n$carb$IQR\n[1] 2\n\n$carb$min\n[1] 1\n\n$carb$max\n[1] 8",
    "crumbs": [
      "Assignment 1"
    ]
  },
  {
    "objectID": "assignments/assignment-1.html#b.2",
    "href": "assignments/assignment-1.html#b.2",
    "title": "Assignment 1",
    "section": "(b.2)",
    "text": "(b.2)\n\ncompute_stats_sapply &lt;- function(data) {\n  stats &lt;- sapply(data, function(column) {\n    list(\n      mean = mean(column, na.rm = TRUE),\n      median = median(column, na.rm = TRUE),\n      variance = var(column, na.rm = TRUE),\n      IQR = IQR(column, na.rm = TRUE),\n      min = min(column, na.rm = TRUE),\n      max = max(column, na.rm = TRUE)\n    )\n  }, simplify = FALSE)  \n  \n  return(stats)\n}\n\ndata(mtcars)\n\nstats_results_sapply &lt;- compute_stats_sapply(mtcars)\n\nprint(stats_results_sapply)\n\n$mpg\n$mpg$mean\n[1] 20.09062\n\n$mpg$median\n[1] 19.2\n\n$mpg$variance\n[1] 36.3241\n\n$mpg$IQR\n[1] 7.375\n\n$mpg$min\n[1] 10.4\n\n$mpg$max\n[1] 33.9\n\n\n$cyl\n$cyl$mean\n[1] 6.1875\n\n$cyl$median\n[1] 6\n\n$cyl$variance\n[1] 3.189516\n\n$cyl$IQR\n[1] 4\n\n$cyl$min\n[1] 4\n\n$cyl$max\n[1] 8\n\n\n$disp\n$disp$mean\n[1] 230.7219\n\n$disp$median\n[1] 196.3\n\n$disp$variance\n[1] 15360.8\n\n$disp$IQR\n[1] 205.175\n\n$disp$min\n[1] 71.1\n\n$disp$max\n[1] 472\n\n\n$hp\n$hp$mean\n[1] 146.6875\n\n$hp$median\n[1] 123\n\n$hp$variance\n[1] 4700.867\n\n$hp$IQR\n[1] 83.5\n\n$hp$min\n[1] 52\n\n$hp$max\n[1] 335\n\n\n$drat\n$drat$mean\n[1] 3.596563\n\n$drat$median\n[1] 3.695\n\n$drat$variance\n[1] 0.2858814\n\n$drat$IQR\n[1] 0.84\n\n$drat$min\n[1] 2.76\n\n$drat$max\n[1] 4.93\n\n\n$wt\n$wt$mean\n[1] 3.21725\n\n$wt$median\n[1] 3.325\n\n$wt$variance\n[1] 0.957379\n\n$wt$IQR\n[1] 1.02875\n\n$wt$min\n[1] 1.513\n\n$wt$max\n[1] 5.424\n\n\n$qsec\n$qsec$mean\n[1] 17.84875\n\n$qsec$median\n[1] 17.71\n\n$qsec$variance\n[1] 3.193166\n\n$qsec$IQR\n[1] 2.0075\n\n$qsec$min\n[1] 14.5\n\n$qsec$max\n[1] 22.9\n\n\n$vs\n$vs$mean\n[1] 0.4375\n\n$vs$median\n[1] 0\n\n$vs$variance\n[1] 0.2540323\n\n$vs$IQR\n[1] 1\n\n$vs$min\n[1] 0\n\n$vs$max\n[1] 1\n\n\n$am\n$am$mean\n[1] 0.40625\n\n$am$median\n[1] 0\n\n$am$variance\n[1] 0.2489919\n\n$am$IQR\n[1] 1\n\n$am$min\n[1] 0\n\n$am$max\n[1] 1\n\n\n$gear\n$gear$mean\n[1] 3.6875\n\n$gear$median\n[1] 4\n\n$gear$variance\n[1] 0.5443548\n\n$gear$IQR\n[1] 1\n\n$gear$min\n[1] 3\n\n$gear$max\n[1] 5\n\n\n$carb\n$carb$mean\n[1] 2.8125\n\n$carb$median\n[1] 2\n\n$carb$variance\n[1] 2.608871\n\n$carb$IQR\n[1] 2\n\n$carb$min\n[1] 1\n\n$carb$max\n[1] 8",
    "crumbs": [
      "Assignment 1"
    ]
  },
  {
    "objectID": "assignments/assignment-1.html#b.3",
    "href": "assignments/assignment-1.html#b.3",
    "title": "Assignment 1",
    "section": "(b.3)",
    "text": "(b.3)\n\ncompute_stats_apply &lt;- function(data) {\n  stats_matrix &lt;- apply(data, 2, function(column) {\n    c(\n      mean = mean(column, na.rm = TRUE),\n      median = median(column, na.rm = TRUE),\n      variance = var(column, na.rm = TRUE),\n      IQR = IQR(column, na.rm = TRUE),\n      min = min(column, na.rm = TRUE),\n      max = max(column, na.rm = TRUE)\n    )\n  })\n  \n  return(as.data.frame(stats_matrix))  \n}\n\nstats_results_apply &lt;- compute_stats_apply(as.matrix(mtcars))\n\nprint(stats_results_apply)\n\n              mpg      cyl       disp        hp      drat       wt      qsec\nmean     20.09062 6.187500   230.7219  146.6875 3.5965625 3.217250 17.848750\nmedian   19.20000 6.000000   196.3000  123.0000 3.6950000 3.325000 17.710000\nvariance 36.32410 3.189516 15360.7998 4700.8669 0.2858814 0.957379  3.193166\nIQR       7.37500 4.000000   205.1750   83.5000 0.8400000 1.028750  2.007500\nmin      10.40000 4.000000    71.1000   52.0000 2.7600000 1.513000 14.500000\nmax      33.90000 8.000000   472.0000  335.0000 4.9300000 5.424000 22.900000\n                vs        am      gear     carb\nmean     0.4375000 0.4062500 3.6875000 2.812500\nmedian   0.0000000 0.0000000 4.0000000 2.000000\nvariance 0.2540323 0.2489919 0.5443548 2.608871\nIQR      1.0000000 1.0000000 1.0000000 2.000000\nmin      0.0000000 0.0000000 3.0000000 1.000000\nmax      1.0000000 1.0000000 5.0000000 8.000000",
    "crumbs": [
      "Assignment 1"
    ]
  },
  {
    "objectID": "assignments/assignment-1.html#c",
    "href": "assignments/assignment-1.html#c",
    "title": "Assignment 1",
    "section": "(c)",
    "text": "(c)\n\nlibrary(dslabs)\ndata(\"na_example\")\nna_example\n\n   [1]  2  1  3  2  1  3  1  4  3  2  2 NA  2  2  1  4 NA  1  1  2  1  2  2  1\n  [25]  2  5 NA  2  2  3  1  2  4  1  1  1  4  5  2  3  4  1  2  4  1  1  2  1\n  [49]  5 NA NA NA  1  1  5  1  3  1 NA  4  4  7  3  2 NA NA  1 NA  4  1  2  2\n  [73]  3  2  1  2  2  4  3  4  2  3  1  3  2  1  1  1  3  1 NA  3  1  2  2  1\n  [97]  2  2  1  1  4  1  1  2  3  3  2  2  3  3  3  4  1  1  1  2 NA  4  3  4\n [121]  3  1  2  1 NA NA NA NA  1  5  1  2  1  3  5  3  2  2 NA NA NA NA  3  5\n [145]  3  1  1  4  2  4  3  3 NA  2  3  2  6 NA  1  1  2  2  1  3  1  1  5 NA\n [169] NA  2  4 NA  2  5  1  4  3  3 NA  4  3  1  4  1  1  3  1  1 NA NA  3  5\n [193]  2  2  2  3  1  2  2  3  2  1 NA  2 NA  1 NA NA  2  1  1 NA  3 NA  1  2\n [217]  2  1  3  2  2  1  1  2  3  1  1  1  4  3  4  2  2  1  4  1 NA  5  1  4\n [241] NA  3 NA NA  1  1  5  2  3  3  2  4 NA  3  2  5 NA  2  3  4  6  2  2  2\n [265] NA  2 NA  2 NA  3  3  2  2  4  3  1  4  2 NA  2  4 NA  6  2  3  1 NA  2\n [289]  2 NA  1  1  3  2  3  3  1 NA  1  4  2  1  1  3  2  1  2  3  1 NA  2  3\n [313]  3  2  1  2  3  5  5  1  2  3  3  1 NA NA  1  2  4 NA  2  1  1  1  3  2\n [337]  1  1  3  4 NA  1  2  1  1  3  3 NA  1  1  3  5  3  2  3  4  1  4  3  1\n [361] NA  2  1  2  2  1  2  2  6  1  2  4  5 NA  3  4  2  1  1  4  2  1  1  1\n [385]  1  2  1  4  4  1  3 NA  3  3 NA  2 NA  1  2  1  1  4  2  1  4  4 NA  1\n [409]  2 NA  3  2  2  2  1  4  3  6  1  2  3  1  3  2  2  2  1  1  3  2  1  1\n [433]  1  3  2  2 NA  4  4  4  1  1 NA  4  3 NA  1  3  1  3  2  4  2  2  2  3\n [457]  2  1  4  3 NA  1  4  3  1  3  2 NA  3 NA  1  3  1  4  1  1  1  2  4  3\n [481]  1  2  2  2  3  2  3  1  1 NA  3  2  1  1  2 NA  2  2  2  3  3  1  1  2\n [505] NA  1  2  1  1  3  3  1  3  1  1  1  1  1  2  5  1  1  2  2  1  1 NA  1\n [529]  4  1  2  4  1  3  2 NA  1  1 NA  2  1  1  4  2  3  3  1  5  3  1  1  2\n [553] NA  1  1  3  1  3  2  4 NA  2  3  2  1  2  1  1  1  2  2  3  1  5  2 NA\n [577]  2 NA  3  2  2  2  1  5  3  2  3  1 NA  3  1  2  2  2  1  2  2  4 NA  6\n [601]  1  2 NA  1  1  2  2  3 NA  3  2  3  3  4  2 NA  2 NA  4 NA  1  1  2  2\n [625]  3  1  1  1  3 NA  2  5 NA  7  1 NA  4  3  3  1 NA  1  1  1  1  3  2  4\n [649]  2  2  3 NA NA  1  4  3  2  2  2  3  2  4  2  2  4 NA NA NA  6  3  3  1\n [673]  4  4  2  1 NA  1  6 NA  3  3  2  1  1  6 NA  1  5  1 NA  2  6  2 NA  4\n [697]  1  3  1  2 NA  1  1  3  1  2  4  2  1  3  2  4  3  2  2  1  1  5  6  4\n [721]  2  2  2  2  4 NA  1  2  2  2  2  4  5 NA NA NA  4  3  3  3  2  4  2  4\n [745] NA NA NA NA  2  1 NA  2  4  3  2 NA  2  3  1  3  4 NA  1  2  1  2 NA  3\n [769]  1  2  1  2  1  2  1  2  2  2  2  1  1  3  3  1  3  4  3 NA NA  4  2  3\n [793]  2  1  3  2  4  2  2  3  1  2  4  3  3  4 NA  1  4  2  1  1  1  3  1  5\n [817]  2  2  4  2 NA  1  3  1  2 NA  1  2  1  2  1 NA  1  3  2  3  2 NA  2  1\n [841]  4  2 NA NA NA  2  4  2 NA NA  3  1 NA  5  5  2  2  2 NA  2  1  3  1  3\n [865]  2  4  2  4 NA  4  1  2  3  2  3  3  2  3  2  2  2  1  3  2  4  2 NA  3\n [889]  3  2  2 NA NA  3  2  1  2  4  1  1  1  1  4  3  2 NA  3  2 NA  1 NA  3\n [913]  2  1  1  1  2 NA  2  2  3  3  2 NA NA  4  5  2  2  2  1  2  3  1  3  3\n [937]  4  3 NA  1  1  1 NA  4  3  5  1  1  2 NA  2  2  2  2  5  2  2  3  1  2\n [961]  3 NA  1  2 NA NA  2 NA  3  1  1  2  5  3  5  1  1  4 NA  2  1  3  1  1\n [985]  2  4  3  3  3 NA  1  1  2  2  1  1  2  2 NA  2\n\n\n\nna_count &lt;- sum(is.na(na_example))\n\nprint(\"Here, you can see the number of NA in this dataset:\")\n\n[1] \"Here, you can see the number of NA in this dataset:\"\n\nprint(na_count)\n\n[1] 145\n\n\n\nna_indexes &lt;- which(is.na(na_example))\n\nprint(\"Here, you can basicly see the indexes of NA data:\")\n\n[1] \"Here, you can basicly see the indexes of NA data:\"\n\nprint(na_indexes)\n\n  [1]  12  17  27  50  51  52  59  65  66  68  91 117 125 126 127 128 139 140\n [19] 141 142 153 158 168 169 172 179 189 190 203 205 207 208 212 214 237 241\n [37] 243 244 253 257 265 267 269 279 282 287 290 298 310 325 326 330 341 348\n [55] 361 374 392 395 397 407 410 437 443 446 461 468 470 490 496 505 527 536\n [73] 539 553 561 576 578 589 599 603 609 616 618 620 630 633 636 641 652 653\n [91] 666 667 668 677 680 687 691 695 701 726 734 735 736 745 746 747 748 751\n[109] 756 762 767 788 789 807 821 826 832 838 843 844 845 849 850 853 859 869\n[127] 887 892 893 906 909 911 918 924 925 939 943 950 962 965 966 968 979 990\n[145] 999\n\n\n\nlibrary(dslabs)\ndata(\"na_example\")\n\nmean_value &lt;- mean(na_example, na.rm = TRUE)\nsd_value &lt;- sd(na_example, na.rm = TRUE)\n\nprint(paste(\"Mean:\", mean_value))\n\n[1] \"Mean: 2.30175438596491\"\n\nprint(paste(\"Standard Deviation:\", sd_value))\n\n[1] \"Standard Deviation: 1.22338043224169\"\n\n\n\nlibrary(dslabs)\ndata(\"na_example\")\n\nmape &lt;- function(actual, predicted) {\n  return(mean(abs((actual - predicted) / actual)) * 100)\n}\n\nlibrary(dslabs)\ndata(\"na_example\")\n\nmedian_value &lt;- median(na_example, na.rm = TRUE)\nversion1 &lt;- na_example\nversion1[is.na(version1)] &lt;- median_value\n\nset.seed(42)\nnon_na_values &lt;- na_example[!is.na(na_example)]\nversion2 &lt;- na_example\nversion2[is.na(version2)] &lt;- sample(non_na_values, sum(is.na(version2)), replace = TRUE)\n\nmeans &lt;- c(mean(na_example, na.rm = TRUE),\n           mean(version1, na.rm = TRUE),\n           mean(version2, na.rm = TRUE))\n\nsds &lt;- c(sd(na_example, na.rm = TRUE),\n         sd(version1, na.rm = TRUE),\n         sd(version2, na.rm = TRUE))\n\nmape_means_v1 &lt;- mape(means[1], means[2])\nmape_means_v2 &lt;- mape(means[1], means[3])\nmape_sds_v1 &lt;- mape(sds[1], sds[2])\nmape_sds_v2 &lt;- mape(sds[1], sds[3])\n\nstats_df &lt;- data.frame(\n  Version = c(\"Original\", \"Median Imputed\", \"Random Imputed\"),\n  Mean = means,\n  Standard_Deviation = sds,\n  MAPE_Mean = c(NA, mape_means_v1, mape_means_v2),  # MAPE for mean\n  MAPE_SD = c(NA, mape_sds_v1, mape_sds_v2)         # MAPE for standard deviation\n)\n\nprint(stats_df)\n\n         Version     Mean Standard_Deviation  MAPE_Mean  MAPE_SD\n1       Original 2.301754           1.223380         NA       NA\n2 Median Imputed 2.258000           1.136102 1.90091463 7.134239\n3 Random Imputed 2.303000           1.238032 0.05411585 1.197646\n\n\nAs seen on the table the version 2 array’s mean and SD values are closer to the original dataset. It means that, to obtain a new dataset with the characteristic of original one, changing NA values with the randomly selected data from original dataset is more relevant.",
    "crumbs": [
      "Assignment 1"
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "# Mert YILDIZ"
  },
  {
    "objectID": "project.html#why-its-important-to-create-a-forecast",
    "href": "project.html#why-its-important-to-create-a-forecast",
    "title": "It’s Not Rocket Science, It’s Electricity Market",
    "section": "3.1 Why It’s Important to Create a Forecast?",
    "text": "3.1 Why It’s Important to Create a Forecast?\nElectricity price forecasting plays a critical role in the power market. Accurate forecasts are essential not only for making commercial decisions but also for managing financial processes. Cash flow management is a key factor for maintaining an active and balanced presence in the market. Portfolios with constant inflows and outflows must manage their commercial balance while simultaneously overseeing their cash flows. Daily electricity price forecasting can provide significant advantages in both commercial and financial foresight."
  },
  {
    "objectID": "project.html#how-electricity-prices-are-determined",
    "href": "project.html#how-electricity-prices-are-determined",
    "title": "It’s Not Rocket Science, It’s Electricity Market",
    "section": "3.2 How Electricity Prices are Determined?",
    "text": "3.2 How Electricity Prices are Determined?\nElectricity prices are determined through a system known as the merit order. Similar to basic economic pricing, supply and demand are matched for each hour, and the price is set at the point where supply meets demand. However, unlike other markets, electricity is a fundamental need—so demand does not respond to price, but instead determines it.\nFor any given hour, demand is met starting from the cheapest suppliers, moving up to the more expensive ones. The price of electricity is then set based on the bid of the most expensive accepted supplier. Electricity generation resources can generally be ranked from cheapest to most expensive as follows: renewables, hydro, nuclear, domestic coal, imported coal, and natural gas."
  },
  {
    "objectID": "project.html#exploratory-data-analysis-trend-analysis",
    "href": "project.html#exploratory-data-analysis-trend-analysis",
    "title": "It’s Not Rocket Science, It’s Electricity Market",
    "section": "3.3 Exploratory Data Analysis & Trend Analysis",
    "text": "3.3 Exploratory Data Analysis & Trend Analysis\nElectricity prices can be highly volatile even on the same type of day. The chart below shows the prices for two different Mondays in November 2024\n\n\nShow Code\nlibrary(dplyr)\nlibrary(ggplot2)\n\nprice_data &lt;- epias_merged %&gt;%\n  filter(date %in% as.Date(c(\"2024-11-04\", \"2024-11-18\"))) %&gt;%\n  mutate(hour_numeric = as.numeric(substr(hour, 1, 2))) %&gt;%\n  select(date, hour_numeric, price)\n\nggplot(price_data, aes(x = hour_numeric, y = price, color = as.factor(date), group = date)) +\n  geom_line(size = 1.2) +\n  scale_color_manual(\n    values = c(\"2024-11-04\" = \"red\", \"2024-11-18\" = \"blue\"),\n    labels = c(\"4 November 2024\", \"18 November 2024\")\n  ) +\n  scale_x_continuous(\n    breaks = 0:23,\n    labels = sprintf(\"%02d:00\", 0:23)\n  ) +\n  labs(\n    title = \"Hourly Electricity Price – 4 & 18 November 2024\",\n    x = \"Hour of Day\",\n    y = \"Price (TL/MWh)\",\n    color = \"Date\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\"),\n    axis.text.x = element_text(angle = 45, hjust = 1)\n  )\n\n\n\n\n\n\n\n\n\nElectricity prices exhibit high volatility across different hours of the day. This volatility is clearly visible in the chart below, with midday hours standing out as particularly volatile.\n\n\nShow Code\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(lubridate)\n\nepias_merged &lt;- epias_merged %&gt;%\n  mutate(hour_numeric = as.numeric(substr(hour, 1, 2)))\n\nprice_2024 &lt;- epias_merged %&gt;%\n  filter(year(date) == 2024) %&gt;%\n  select(hour_numeric, price)\n\nggplot(price_2024, aes(x = factor(hour_numeric), y = price, fill = factor(hour_numeric))) +\n  geom_violin(scale = \"width\", adjust = 1.2, alpha = 0.8, color = NA) +\n  scale_fill_viridis_d(option = \"C\", begin = 0.1, end = 0.9) +\n  coord_cartesian(ylim = c(0, 3400)) +  \n  labs(\n    title = \"Hourly Electricity Price Distribution – 2024\",\n    x = \"Hour of Day\",\n    y = \"Electricity Price (TL/MWh)\",\n    fill = \"Hour\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\", size = 14),\n    plot.subtitle = element_text(hjust = 0.5),\n    legend.position = \"none\"\n  )\n\n\n\n\n\n\n\n\n\nTo understand the electricity market, it is essential to first examine the factors that influence it. Among these, the most critical elements are generation and consumption data.\n\n\nShow Code\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(lubridate)\n\nprod_data &lt;- epias_merged %&gt;%\n  filter(date == as.Date(\"2024-06-12\")) %&gt;%\n  select(hour, solar, wind, runofriver, dam, geothermal, biomass, naturalgas,\n         fueloil, naphta, lignite, darkcoal, importedcoal, other)\n\nprod_long &lt;- prod_data %&gt;%\n  pivot_longer(\n    cols = -hour,\n    names_to = \"source\",\n    values_to = \"generation\"\n  )\n\nsource_colors &lt;- c(\n  solar = \"gold\",\n  wind = \"forestgreen\",\n  runofriver = \"dodgerblue\",\n  dam = \"steelblue\",\n  geothermal = \"sienna\",\n  biomass = \"darkolivegreen\",\n  naturalgas = \"firebrick\",\n  fueloil = \"darkred\",\n  naphta = \"orangered\",\n  lignite = \"black\",\n  darkcoal = \"black\",\n  importedcoal = \"dimgray\",\n  other = \"purple\"\n)\n\nggplot(prod_long, aes(x = hour, y = generation, fill = source)) +\n  geom_bar(stat = \"identity\") +\n  scale_fill_manual(values = source_colors) +\n  labs(\n    title = \"Electricity Generation by Source – 12 June 2024\",\n    x = \"Hour\",\n    y = \"Generation (MW)\",\n    fill = \"Source\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\"),\n    axis.text.x = element_text(angle = 45, hjust = 1)\n  )\n\n\n\n\n\n\n\n\n\nThis chart clearly shows how electricity demand is met by different generation sources at different hours of the day.\nThere are two major factors that influence electricity consumption, or demand. The first is air temperature. In Türkiye, electricity demand increases when the average daily temperature rises above or drops below 15°C, due to higher use of heating and cooling systems.\nThe second factor is more long-term: the country’s level of industrial activity and population size. As the population grows and industrial production expands, electricity demand also rises.\nThe chart below displays the moving average electricity demand data for 2023 and 2024.\n\n\nShow Code\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(lubridate)\nlibrary(zoo)\n\ndemand_yoy &lt;- epias_merged %&gt;%\n  filter(year(date) %in% c(2023, 2024)) %&gt;%\n  arrange(date, hour) %&gt;%\n  mutate(\n    year = year(date),\n    doy = yday(date),\n    datetime = as.POSIXct(paste(date, hour), format = \"%Y-%m-%d %H:%M\")\n  ) %&gt;%\n  group_by(year) %&gt;%\n  arrange(datetime) %&gt;%\n  mutate(\n    demand_7day_avg = rollmean(demand, k = 24 * 7, fill = NA, align = \"right\")\n  ) %&gt;%\n  ungroup()\n\nggplot(demand_yoy, aes(x = doy, y = demand_7day_avg, color = as.factor(year))) +\n  geom_line(size = 1.2) +\n  labs(\n    title = \"Year-over-Year Demand Comparison (7-Day Moving Average)\",\n    x = \"Day of Year\",\n    y = \"Demand (MW)\",\n    color = \"Year\"\n  ) +\n  scale_color_manual(values = c(\"2023\" = \"purple\", \"2024\" = \"gold\")) +\n  expand_limits(y = 20000) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\")\n  )\n\n\n\n\n\n\n\n\n\nAs seen in the chart, electricity demand increases during the summer due to rising temperatures, and also in winter as temperatures drop. Additionally, demand tends to reach its lowest levels during religious holidays, when industrial activity comes to a near halt.\nWhen examining demand data at a higher resolution, it becomes clear how electricity demand varies across the days of the week.\n\n\nShow Code\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(lubridate)\n\nnov_demand &lt;- epias_merged %&gt;%\n  filter(date &gt;= as.Date(\"2024-11-01\") & date &lt;= as.Date(\"2024-11-10\")) %&gt;%\n  mutate(\n    datetime = as.POSIXct(paste(date, hour), format = \"%Y-%m-%d %H:%M\"),\n    day_num = day(date) + hour(datetime) / 24 \n  )\n\nggplot(nov_demand, aes(x = day_num, y = demand)) +\n  geom_line(color = \"steelblue\", size = 1.2) +\n  scale_x_continuous(breaks = 1:10) +\n  labs(\n    title = \"November 2024 - First 10 Days Hourly Demand\",\n    x = \"Day of Month\",\n    y = \"Demand (MW)\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\")\n  )\n\n\n\n\n\n\n\n\n\nElectricity demand remains relatively consistent during weekdays, whereas a noticeable drop is observed on Saturdays and Sundays.\nA comprehensive understanding of the data requires analyzing generation figures in conjunction with demand.\nRenewable energy sources exhibit different generation trend characteristics. Among these, the most influential factors are meteorological conditions and seasonal effects. Below is the generation data from various sources for a single day. As seen, solar production peaks around midday and drops to zero after sunset. Wind generation, on the other hand, may display varying patterns from day to day.\n\n\nShow Code\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(lubridate)\n\nnov_renew &lt;- epias_merged %&gt;%\n  filter(date &gt;= as.Date(\"2024-11-01\") & date &lt;= as.Date(\"2024-11-10\")) %&gt;%\n  mutate(\n    datetime = as.POSIXct(paste(date, hour), format = \"%Y-%m-%d %H:%M\")\n  )\n\nggplot(nov_renew, aes(x = datetime)) +\n  geom_line(aes(y = solar, color = \"Solar\"), size = 1.2) +\n  geom_line(aes(y = wind, color = \"Wind\"), size = 1.2) +\n  scale_color_manual(values = c(\"Solar\" = \"orange\", \"Wind\" = \"darkgreen\")) +\n  labs(\n    title = \"Solar and Wind Generation – November 1–10, 2024\",\n    x = \"Datetime\",\n    y = \"Generation (MW)\",\n    color = \"Source\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(hjust = 0.5, face = \"bold\")\n  )\n\n\n\n\n\n\n\n\n\nAn analysis of solar and run-of-river generation data reveals clear seasonal trends. While solar production increases during the summer months, run-of-river generation peaks in the spring.\n\n\nShow Code\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(zoo)\nlibrary(lubridate)\n\nsolar_river_daily &lt;- epias_merged %&gt;%\n  mutate(date = as.Date(date)) %&gt;%\n  group_by(date) %&gt;%\n  summarise(\n    solar = mean(solar, na.rm = TRUE),\n    runofriver = mean(runofriver, na.rm = TRUE)\n  ) %&gt;%\n  filter(year(date) == 2023) %&gt;%\n  arrange(date) %&gt;%\n  mutate(\n    solar_ma = rollmean(solar, k = 7, fill = NA, align = \"right\"),\n    runofriver_ma = rollmean(runofriver, k = 7, fill = NA, align = \"right\")\n  )\n\nggplot(solar_river_daily, aes(x = date)) +\n  geom_line(aes(y = solar_ma, color = \"Solar\"), size = 1.2) +\n  geom_line(aes(y = runofriver_ma, color = \"Run-of-River\"), size = 1.2) +\n  scale_color_manual(values = c(\"Solar\" = \"orange\", \"Run-of-River\" = \"steelblue\")) +\n  labs(\n    title = \"7-Day Moving Average of Solar and Run-of-River Generation – 2023\",\n    x = \"Date\",\n    y = \"Generation (MWh)\",\n    color = \"Source\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5, face = \"bold\"))"
  }
]