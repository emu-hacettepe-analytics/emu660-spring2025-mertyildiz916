---
title: "It's Not Rocket Science, It's Electricity Market"
---

Welcome to my EMU660 project page.

# 1. Project Overview and Scope

Electricity has increasingly become a tradable commodity on global and Turkish stock exchanges, subject to specific regulations and limitations. In a liberalized market, it is uniquely characterized by a third dimension—time—alongside price and volume. In Turkey, electricity trading takes place across multiple market platforms, all overseen and regulated by the Energy Exchange Istanbul (EXIST). This project aims to analyze the formation of electricity prices and investigate the impact of total electricity demand as well as electricity generation from various sources on price formation. Specifically, the daily impact of renewable energy generation on electricity prices will be examined, while the influence of natural gas prices on the monthly average electricity price will also be explored. Electricity prices will be forecasted using multiple linear regression models at both daily and monthly resolutions, and the results will be evaluated accordingly.

# 2. Data

This project will utilize three main data sources related to the electricity market or influence it. EPİAŞ (Energy Exchange Istanbul), TEİAŞ (Turkish Electricity Transmission Corporation), and BOTAŞ (Petroleum Pipeline Corporation) are public institutions in Turkey that act as decision-makers and regulators in the electricity market. The open-access data provided by these institutions will be used throughout the analysis and forecasting processes of the project. The whole data used in this project starts in first hour of 2023 and end at the end of 2024.

## 2.1 Data Source

This project will utilize three main data sources related to the electricity market or influence it. EPİAŞ (Energy Exchange Istanbul), TEİAŞ (Turkish Electricity Transmission Corporation), and BOTAŞ (Petroleum Pipeline Corporation) are public institutions in Turkey that act as decision-makers and regulators in the electricity market. The open-access data provided by these institutions will be used throughout the analysis and forecasting processes of the project. Data sources can be reached by clicking links below.

[EPİAŞ](https://seffaflik.epias.com.tr/home)

[TEİAŞ](https://www.teias.gov.tr/sektor-raporlari)

[BOTAŞ](https://www.botas.gov.tr/Sayfa/satis-fiyat-tarifesi/439)

## 2.2 General Information About Data

Data related to the Day-Ahead Market will be obtained from EPİAŞ. The data sourced from EPİAŞ can be categorized under three main headings.

1)  FDDP (Final Daily Production Program): This data is provided at an hourly resolution for 12 different types of energy sources. It includes the planned generation amounts for the following day submitted by power plants operating under each source category. Every day, power plants enter their generation schedules into the system by 4 PM, and EPİAŞ collects and publishes this data aggregated by source type.

2)  Real-Time Consumption: This data represents the total amount of electricity consumed across Turkey. It is provided on an hourly basis and can be referred to as the total electricity demand.

3)  MCP (Market Clearing Price): This data refers to the electricity price determined for each hour in the Day-Ahead Market, formed by matching supply and demand for the traded electricity.

Natural gas tariff data has been sourced from BOTAŞ. The prices of natural gas used for electricity generation are determined by BOTAŞ. Additionally, water inflow data to the main basin dams, provided by TEİAŞ, may be used if deemed necessary.

## 2.3 Reason of Choice

The electricity market consists of various sub-markets. Making accurate price forecasts for short-term and long-term electricity sales can create significant added value. Especially in long-term purchase or sale agreements, forecasting electricity prices can facilitate more profitable commercial deals while minimizing risk. For instance, the analyses and models developed in this project can help establish a relationship between renewable energy generation and electricity prices over specific periods. These forecasts can then be used to assess buy and sell offers in the market for future periods, enabling more informed and strategic positioning.

## 2.4 Preprocessing

In the preprocessing stage, the data stored in Excel files was converted into RData format. No additional preprocessing steps were required at this stage.

```{r}

library(readxl)

epias_data <- read_excel("epias_data.xlsx")

botas_data <- read_excel("botas_data.xlsx")

save(epias_data, botas_data, file = "electricity.RData")

head(epias_data)

head(botas_data)

```

```{r}


load("electricity.RData")
library(dplyr)

epias_data$date <- as.Date(epias_data$date)

epias_data$year <- format(epias_data$date, "%Y")
epias_data$month <- format(epias_data$date, "%m")

botas_data$month <- sprintf("%02d", botas_data$month)

botas_data$year <- as.character(botas_data$year)

epias_merged <- left_join(epias_data, botas_data, by = c("year", "month"))

head(epias_merged)

save(epias_merged, file = "electricity_merged.RData")

epias_merged <- epias_merged %>%
  select(date, year, month, everything(), -year, -month)

epias_merged <- epias_merged %>%
  select(-price, everything(), price)

save(epias_merged, file = "electricity_merged.RData")

head(epias_merged)
```

```{r}
library(dplyr)

epias_daily <- epias_merged %>%
  group_by(date) %>%
  summarise(across(where(is.numeric), mean, na.rm = TRUE))

head(epias_daily)
```

```{r}
library(dplyr)

epias_simplified_daily <- epias_daily %>%
  mutate(
    cheap_thermal = fueloil + naphta + lignite + darkcoal,
    renewables = wind + runofriver + biomass + geothermal
  ) %>%
  select(
    date, cheap_thermal, renewables,
    importedcoal, naturalgas, solar, dam, demand, natgasprice, price
  )
save(epias_simplified_daily, file = "epias_simplified_daily.RData")

head(epias_simplified_daily)
```

```{r}
library(dplyr)
library(ggplot2)
library(lubridate)

nov_demand <- epias_merged %>%
  filter(date >= as.Date("2024-11-01") & date <= as.Date("2024-11-10")) %>%
  mutate(
    datetime = as.POSIXct(paste(date, hour), format = "%Y-%m-%d %H:%M"),
    day_num = day(date) + hour(datetime) / 24 
  )

ggplot(nov_demand, aes(x = day_num, y = demand)) +
  geom_line(color = "steelblue", size = 1.2) +
  scale_x_continuous(breaks = 1:10) +
  labs(
    title = "November 2024 - First 10 Days Hourly Demand",
    x = "Day of Month",
    y = "Demand (MW)"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold")
  )
```

```{r}

library(dplyr)
library(ggplot2)
library(lubridate)

nov_renew <- epias_merged %>%
  filter(date >= as.Date("2024-11-01") & date <= as.Date("2024-11-10")) %>%
  mutate(
    datetime = as.POSIXct(paste(date, hour), format = "%Y-%m-%d %H:%M")
  )

ggplot(nov_renew, aes(x = datetime)) +
  geom_line(aes(y = solar, color = "Solar"), size = 1.2) +
  geom_line(aes(y = wind, color = "Wind"), size = 1.2) +
  scale_color_manual(values = c("Solar" = "orange", "Wind" = "steelblue")) +
  labs(
    title = "Solar and Wind Generation – November 1–10, 2024",
    x = "Datetime",
    y = "Generation (MW)",
    color = "Source"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold")
  )

```

```{r}
library(dplyr)
library(ggplot2)
library(lubridate)
library(zoo)

demand_yoy <- epias_merged %>%
  filter(year(date) %in% c(2023, 2024)) %>%
  arrange(date, hour) %>%
  mutate(
    year = year(date),
    doy = yday(date),
    datetime = as.POSIXct(paste(date, hour), format = "%Y-%m-%d %H:%M")
  ) %>%
  group_by(year) %>%
  arrange(datetime) %>%
  mutate(
    demand_7day_avg = rollmean(demand, k = 24 * 7, fill = NA, align = "right")
  ) %>%
  ungroup()

ggplot(demand_yoy, aes(x = doy, y = demand_7day_avg, color = as.factor(year))) +
  geom_line(size = 1.2) +
  labs(
    title = "Year-over-Year Demand Comparison (7-Day Moving Average)",
    x = "Day of Year",
    y = "Demand (MW)",
    color = "Year"
  ) +
  scale_color_manual(values = c("2023" = "purple", "2024" = "gold")) +
  expand_limits(y = 20000) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold")
  )

```

```{r}
# Gerekli paketler
library(dplyr)
library(car)
library(ggplot2)

# 1. Veriyi hazırlama: sadece gerekli sütunları seç ve eksik değerleri çıkar
reg_data <- epias_simplified_daily %>%
  select(price, cheap_thermal, naturalgas, importedcoal, renewables, demand, solar, dam, natgasprice) %>%
  na.omit()

# 2. Regresyon modeli oluştur
model <- lm(price ~ cheap_thermal + naturalgas + importedcoal + renewables + demand + solar + dam + natgasprice, data = reg_data)

# 3. Modelin özetini al
summary(model)

# 4. Değişkenler arası çoklu bağlantıyı kontrol et (VIF)
vif(model)

# 5. Artıkların dağılımını kontrol et (lineerlik ve normallik varsayımları için)
par(mfrow = c(2, 2))  # Tüm grafiklere bir pencerede bakmak için
plot(model)
par(mfrow = c(1, 1))  # Varsayılan görünüme dön

# 6. Gerçek vs Tahmin edilen değerlerin grafiği
reg_data$predicted_price <- predict(model)

ggplot(reg_data, aes(x = predicted_price, y = price)) +
  geom_point(color = "steelblue") +
  geom_abline(slope = 1, intercept = 0, color = "darkred", linetype = "dashed") +
  labs(
    title = "Actual vs Predicted Electricity Price",
    x = "Predicted Price",
    y = "Actual Price"
  ) +
  theme_minimal()


```

```{r}
library(dplyr)
library(ggplot2)
library(lubridate)

reg_data <- epias_simplified_daily %>%
  select(date, price, cheap_thermal, naturalgas, importedcoal, renewables, demand, solar, dam, natgasprice) %>%
  na.omit()

reg_data$predicted_price <- predict(model, newdata = reg_data)

december_data <- reg_data %>%
  filter(date >= as.Date("2024-06-01") & date <= as.Date("2024-06-30"))

actualvspredicted <- ggplot(december_data, aes(x = date)) +
  geom_line(aes(y = price, color = "Actual"), size = 1.2) +
  geom_line(aes(y = predicted_price, color = "Predicted"), size = 1.2, linetype = "dashed") +
  scale_color_manual(values = c("Actual" = "steelblue", "Predicted" = "orange")) +
  labs(
    title = "Actual vs Predicted Electricity Price – December 2024",
    x = "Date",
    y = "Electricity Price (TL/MWh)",
    color = ""
  ) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))

actualvspredicted

```

# 3. Analysis

## 3.1 Exploratory Data Analysis

xxxxxx

## 3.2 Trend Analysis

xxxxxx

## 3.3 Model Fitting

xxxxxx

## 3.4 Results

xxxxxx

# 4. Results and Key Takeaways

xxxxxx
